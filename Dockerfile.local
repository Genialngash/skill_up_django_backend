FROM python:3.9-slim-buster AS builder

# Set work directory
WORKDIR /django

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV CELERY_BROKER redis://redis:6379/0
ENV CELERY_BACKEND redis://redis:6379/0
ENV VEETA_ENV core.settings.dev

RUN apt-get update && \
    apt-get install -y cron && \
    apt-get install -y vim && \
    apt-get -y install sudo && \
    apt-get -y install libpq-dev gcc && \
    pip install psycopg2 && \
    apt-get autoremove -y && \
    apt-get clean

FROM builder AS build2
# Create a Virtual Env
COPY ./requirements.txt requirements.txt
RUN python3 -m venv /opt/venv && \
    /opt/venv/bin/pip install pip --upgrade && \
    /opt/venv/bin/pip install --no-cache-dir -r requirements.txt

COPY . .

# Setup Cronjobs
COPY ./opswork/cronjobs/routine_mgmt /etc/cron.d/routine_mgmt
RUN chmod 0644 /etc/cron.d/routine_mgmt && crontab /etc/cron.d/routine_mgmt

# Create non root user
# RUN groupadd -g 1005 django && \
#     useradd -s /bin/bash -g django -G root,adm,sudo -u 1005 djangoadmin

FROM build2 AS build3
# Copy Start Scripts
COPY ./opswork/backend_entrypoint.sh .
RUN chmod +x ./backend_entrypoint.sh

# RUN adduser --disabled-password --shell /bin/bash --gecos 'djangoadmin' djangoadmin
# RUN adduser djangoadmin sudo
# RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# USER djangoadmin

# Expose ports
EXPOSE 8000
ENTRYPOINT ["/django/backend_entrypoint.sh"]
